//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InteractTextComponent interactText { get { return (InteractTextComponent)GetComponent(GameComponentsLookup.InteractText); } }
    public bool hasInteractText { get { return HasComponent(GameComponentsLookup.InteractText); } }

    public void AddInteractText(TMPro.TextMeshProUGUI newValue, UnityEngine.Transform newLookTarget) {
        var index = GameComponentsLookup.InteractText;
        var component = (InteractTextComponent)CreateComponent(index, typeof(InteractTextComponent));
        component.value = newValue;
        component.lookTarget = newLookTarget;
        AddComponent(index, component);
    }

    public void ReplaceInteractText(TMPro.TextMeshProUGUI newValue, UnityEngine.Transform newLookTarget) {
        var index = GameComponentsLookup.InteractText;
        var component = (InteractTextComponent)CreateComponent(index, typeof(InteractTextComponent));
        component.value = newValue;
        component.lookTarget = newLookTarget;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractText() {
        RemoveComponent(GameComponentsLookup.InteractText);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInteractText;

    public static Entitas.IMatcher<GameEntity> InteractText {
        get {
            if (_matcherInteractText == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InteractText);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInteractText = matcher;
            }

            return _matcherInteractText;
        }
    }
}
