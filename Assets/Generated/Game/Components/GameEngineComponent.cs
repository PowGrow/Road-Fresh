//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EngineComponent engine { get { return (EngineComponent)GetComponent(GameComponentsLookup.Engine); } }
    public bool hasEngine { get { return HasComponent(GameComponentsLookup.Engine); } }

    public void AddEngine(RoadFresh.Vehicle.Physics.Engine newValue) {
        var index = GameComponentsLookup.Engine;
        var component = (EngineComponent)CreateComponent(index, typeof(EngineComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceEngine(RoadFresh.Vehicle.Physics.Engine newValue) {
        var index = GameComponentsLookup.Engine;
        var component = (EngineComponent)CreateComponent(index, typeof(EngineComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveEngine() {
        RemoveComponent(GameComponentsLookup.Engine);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEngine;

    public static Entitas.IMatcher<GameEntity> Engine {
        get {
            if (_matcherEngine == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Engine);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEngine = matcher;
            }

            return _matcherEngine;
        }
    }
}
