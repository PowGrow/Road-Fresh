//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InteractTextCanvasComponent interactTextCanvas { get { return (InteractTextCanvasComponent)GetComponent(GameComponentsLookup.InteractTextCanvas); } }
    public bool hasInteractTextCanvas { get { return HasComponent(GameComponentsLookup.InteractTextCanvas); } }

    public void AddInteractTextCanvas(UnityEngine.Canvas newValue) {
        var index = GameComponentsLookup.InteractTextCanvas;
        var component = (InteractTextCanvasComponent)CreateComponent(index, typeof(InteractTextCanvasComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceInteractTextCanvas(UnityEngine.Canvas newValue) {
        var index = GameComponentsLookup.InteractTextCanvas;
        var component = (InteractTextCanvasComponent)CreateComponent(index, typeof(InteractTextCanvasComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractTextCanvas() {
        RemoveComponent(GameComponentsLookup.InteractTextCanvas);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInteractTextCanvas;

    public static Entitas.IMatcher<GameEntity> InteractTextCanvas {
        get {
            if (_matcherInteractTextCanvas == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InteractTextCanvas);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInteractTextCanvas = matcher;
            }

            return _matcherInteractTextCanvas;
        }
    }
}
