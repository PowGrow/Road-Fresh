//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity beepEntity { get { return GetGroup(GameMatcher.Beep).GetSingleEntity(); } }
    public BeepComponent beep { get { return beepEntity.beep; } }
    public bool hasBeep { get { return beepEntity != null; } }

    public GameEntity SetBeep(bool newValue) {
        if (hasBeep) {
            throw new Entitas.EntitasException("Could not set Beep!\n" + this + " already has an entity with BeepComponent!",
                "You should check if the context already has a beepEntity before setting it or use context.ReplaceBeep().");
        }
        var entity = CreateEntity();
        entity.AddBeep(newValue);
        return entity;
    }

    public void ReplaceBeep(bool newValue) {
        var entity = beepEntity;
        if (entity == null) {
            entity = SetBeep(newValue);
        } else {
            entity.ReplaceBeep(newValue);
        }
    }

    public void RemoveBeep() {
        beepEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public BeepComponent beep { get { return (BeepComponent)GetComponent(GameComponentsLookup.Beep); } }
    public bool hasBeep { get { return HasComponent(GameComponentsLookup.Beep); } }

    public void AddBeep(bool newValue) {
        var index = GameComponentsLookup.Beep;
        var component = (BeepComponent)CreateComponent(index, typeof(BeepComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceBeep(bool newValue) {
        var index = GameComponentsLookup.Beep;
        var component = (BeepComponent)CreateComponent(index, typeof(BeepComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveBeep() {
        RemoveComponent(GameComponentsLookup.Beep);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherBeep;

    public static Entitas.IMatcher<GameEntity> Beep {
        get {
            if (_matcherBeep == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Beep);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherBeep = matcher;
            }

            return _matcherBeep;
        }
    }
}
