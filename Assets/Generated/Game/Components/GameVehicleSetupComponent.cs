//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity vehicleSetupEntity { get { return GetGroup(GameMatcher.VehicleSetup).GetSingleEntity(); } }
    public VehicleSetupComponent vehicleSetup { get { return vehicleSetupEntity.vehicleSetup; } }
    public bool hasVehicleSetup { get { return vehicleSetupEntity != null; } }

    public GameEntity SetVehicleSetup(VehicleSetup newValue) {
        if (hasVehicleSetup) {
            throw new Entitas.EntitasException("Could not set VehicleSetup!\n" + this + " already has an entity with VehicleSetupComponent!",
                "You should check if the context already has a vehicleSetupEntity before setting it or use context.ReplaceVehicleSetup().");
        }
        var entity = CreateEntity();
        entity.AddVehicleSetup(newValue);
        return entity;
    }

    public void ReplaceVehicleSetup(VehicleSetup newValue) {
        var entity = vehicleSetupEntity;
        if (entity == null) {
            entity = SetVehicleSetup(newValue);
        } else {
            entity.ReplaceVehicleSetup(newValue);
        }
    }

    public void RemoveVehicleSetup() {
        vehicleSetupEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public VehicleSetupComponent vehicleSetup { get { return (VehicleSetupComponent)GetComponent(GameComponentsLookup.VehicleSetup); } }
    public bool hasVehicleSetup { get { return HasComponent(GameComponentsLookup.VehicleSetup); } }

    public void AddVehicleSetup(VehicleSetup newValue) {
        var index = GameComponentsLookup.VehicleSetup;
        var component = (VehicleSetupComponent)CreateComponent(index, typeof(VehicleSetupComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceVehicleSetup(VehicleSetup newValue) {
        var index = GameComponentsLookup.VehicleSetup;
        var component = (VehicleSetupComponent)CreateComponent(index, typeof(VehicleSetupComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveVehicleSetup() {
        RemoveComponent(GameComponentsLookup.VehicleSetup);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherVehicleSetup;

    public static Entitas.IMatcher<GameEntity> VehicleSetup {
        get {
            if (_matcherVehicleSetup == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.VehicleSetup);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherVehicleSetup = matcher;
            }

            return _matcherVehicleSetup;
        }
    }
}
