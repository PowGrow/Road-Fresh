//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public InteractObjectComponent interactObject { get { return (InteractObjectComponent)GetComponent(GameComponentsLookup.InteractObject); } }
    public bool hasInteractObject { get { return HasComponent(GameComponentsLookup.InteractObject); } }

    public void AddInteractObject(GameEntity newValue) {
        var index = GameComponentsLookup.InteractObject;
        var component = (InteractObjectComponent)CreateComponent(index, typeof(InteractObjectComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceInteractObject(GameEntity newValue) {
        var index = GameComponentsLookup.InteractObject;
        var component = (InteractObjectComponent)CreateComponent(index, typeof(InteractObjectComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveInteractObject() {
        RemoveComponent(GameComponentsLookup.InteractObject);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInteractObject;

    public static Entitas.IMatcher<GameEntity> InteractObject {
        get {
            if (_matcherInteractObject == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InteractObject);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInteractObject = matcher;
            }

            return _matcherInteractObject;
        }
    }
}
