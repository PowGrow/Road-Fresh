//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using RoadFresh.Initialize.Setups;

public partial class GameContext {

    public GameEntity roadSetupEntity { get { return GetGroup(GameMatcher.RoadSetup).GetSingleEntity(); } }
    public RoadSetupComponent roadSetup { get { return roadSetupEntity.roadSetup; } }
    public bool hasRoadSetup { get { return roadSetupEntity != null; } }

    public GameEntity SetRoadSetup(RoadSetup newValue) {
        if (hasRoadSetup) {
            throw new Entitas.EntitasException("Could not set RoadSetup!\n" + this + " already has an entity with RoadSetupComponent!",
                "You should check if the context already has a roadSetupEntity before setting it or use context.ReplaceRoadSetup().");
        }
        var entity = CreateEntity();
        entity.AddRoadSetup(newValue);
        return entity;
    }

    public void ReplaceRoadSetup(RoadSetup newValue) {
        var entity = roadSetupEntity;
        if (entity == null) {
            entity = SetRoadSetup(newValue);
        } else {
            entity.ReplaceRoadSetup(newValue);
        }
    }

    public void RemoveRoadSetup() {
        roadSetupEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RoadSetupComponent roadSetup { get { return (RoadSetupComponent)GetComponent(GameComponentsLookup.RoadSetup); } }
    public bool hasRoadSetup { get { return HasComponent(GameComponentsLookup.RoadSetup); } }

    public void AddRoadSetup(RoadSetup newValue) {
        var index = GameComponentsLookup.RoadSetup;
        var component = (RoadSetupComponent)CreateComponent(index, typeof(RoadSetupComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRoadSetup(RoadSetup newValue) {
        var index = GameComponentsLookup.RoadSetup;
        var component = (RoadSetupComponent)CreateComponent(index, typeof(RoadSetupComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRoadSetup() {
        RemoveComponent(GameComponentsLookup.RoadSetup);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRoadSetup;

    public static Entitas.IMatcher<GameEntity> RoadSetup {
        get {
            if (_matcherRoadSetup == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RoadSetup);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRoadSetup = matcher;
            }

            return _matcherRoadSetup;
        }
    }
}
