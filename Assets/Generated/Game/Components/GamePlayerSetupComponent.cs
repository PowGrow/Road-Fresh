//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using RoadFresh.Initialize.Setups;

public partial class GameContext {

    public GameEntity playerSetupEntity { get { return GetGroup(GameMatcher.PlayerSetup).GetSingleEntity(); } }
    public PlayerSetupComponent playerSetup { get { return playerSetupEntity.playerSetup; } }
    public bool hasPlayerSetup { get { return playerSetupEntity != null; } }

    public GameEntity SetPlayerSetup(PlayerSetup newValue) {
        if (hasPlayerSetup) {
            throw new Entitas.EntitasException("Could not set PlayerSetup!\n" + this + " already has an entity with PlayerSetupComponent!",
                "You should check if the context already has a playerSetupEntity before setting it or use context.ReplacePlayerSetup().");
        }
        var entity = CreateEntity();
        entity.AddPlayerSetup(newValue);
        return entity;
    }

    public void ReplacePlayerSetup(PlayerSetup newValue) {
        var entity = playerSetupEntity;
        if (entity == null) {
            entity = SetPlayerSetup(newValue);
        } else {
            entity.ReplacePlayerSetup(newValue);
        }
    }

    public void RemovePlayerSetup() {
        playerSetupEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlayerSetupComponent playerSetup { get { return (PlayerSetupComponent)GetComponent(GameComponentsLookup.PlayerSetup); } }
    public bool hasPlayerSetup { get { return HasComponent(GameComponentsLookup.PlayerSetup); } }

    public void AddPlayerSetup(PlayerSetup newValue) {
        var index = GameComponentsLookup.PlayerSetup;
        var component = (PlayerSetupComponent)CreateComponent(index, typeof(PlayerSetupComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlayerSetup(PlayerSetup newValue) {
        var index = GameComponentsLookup.PlayerSetup;
        var component = (PlayerSetupComponent)CreateComponent(index, typeof(PlayerSetupComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerSetup() {
        RemoveComponent(GameComponentsLookup.PlayerSetup);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlayerSetup;

    public static Entitas.IMatcher<GameEntity> PlayerSetup {
        get {
            if (_matcherPlayerSetup == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlayerSetup);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlayerSetup = matcher;
            }

            return _matcherPlayerSetup;
        }
    }
}
